{"version":3,"file":"static/js/186.11199fe3.chunk.js","mappings":"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","sources":["api/themoviedb-api.js","components/Reviews/Reviews.jsx","constants/constants.js"],"sourcesContent":["import axios from 'axios';\n\nimport { BASE_API_URL } from 'constants/constants';\n\naxios.defaults.baseURL = BASE_API_URL;\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTdlNGUxOTY2YmQ5MjdiZjFkNTVjZTNiNWI2ZjExNSIsInN1YiI6IjY1ZTRjZjBkYTY3MjU0MDE2MmE5OWQxMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5YUfqFEIeYNOXV5glwwmsAfcFy2uJj6yBmzayh7sSr8';\naxios.defaults.headers.common['accept'] = 'application/json';\n\nexport const getTrendingMovies = async (time_window = 'day') => {\n  return await axios.get(`/trending/all/${time_window}`);\n};\n\nexport const getMovie = async movieId => {\n  return await axios.get(`/movie/${movieId}`);\n};\n\nexport const getMovieCredits = async movieId => {\n  return await axios.get(`/movie/${movieId}/credits`);\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios.get(`/movie/${movieId}/reviews`);\n};\n","import { getMovieReviews } from 'api/themoviedb-api';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async (movieId) => {\n      try {\n        const { data: { results } } = await getMovieReviews(movieId);\n\n        setReviews(results);\n        console.log(results);\n\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n\n    fetchMovie(movieId);\n\n\n  }, [movieId])\n\n  return (\n    <>\n      {reviews && (<ul>\n        {reviews.map(({ id, author, content }) => {\n          return (<li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>)\n        })}\n      </ul>)}\n    </>\n  )\n}\n\nexport default Reviews","export const BASE_API_URL = 'https://api.themoviedb.org/3';\n"],"names":["axios","BASE_API_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","time_window","_args","arguments","_context","prev","next","length","undefined","concat","abrupt","sent","stop","apply","getMovie","_ref2","_callee2","movieId","_context2","_x","getMovieCredits","_ref3","_callee3","_context3","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useParams","useEffect","fetchMovie","_yield$getMovieReview","results","data","console","log","t0","alert","message","_jsx","_Fragment","children","map","id","author","content","_jsxs"],"sourceRoot":""}